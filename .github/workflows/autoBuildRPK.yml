name: Build Signed RPK
on:
  push:
    tags:
      - 'v*'

jobs:
  build-rpk:
    runs-on: ubuntu-latest
    env:
      TEMP_SIGN_DIR: ${{ github.workspace }}/.temp_sign

    steps:
      # 1. 代码检出
      - uses: actions/checkout@v4

      # 2. 安全写入密钥文件（增强错误处理）
      - name: Setup Signing Files
        run: |
          mkdir -p $TEMP_SIGN_DIR
          # 检查Secrets是否存在
          if [ -z "${{ secrets.PRIVATE_PEM }}" ] || [ -z "${{ secrets.CERTIFICATE_PEM }}" ]; then
            echo "::error::缺少密钥或证书！请检查Secrets配置：PRIVATE_PEM和CERTIFICATE_PEM"
            exit 1
          fi
          # 写入私钥并验证格式
          echo "${{ secrets.PRIVATE_PEM }}" > $TEMP_SIGN_DIR/private.pem
          echo "${{ secrets.CERTIFICATE_PEM }}" > $TEMP_SIGN_DIR/certificate.pem
          # 验证PEM标记
          if ! grep -q "BEGIN PRIVATE KEY" $TEMP_SIGN_DIR/private.pem || \
             ! grep -q "BEGIN CERTIFICATE" $TEMP_SIGN_DIR/certificate.pem; then
            echo "::error::密钥或证书格式错误！需包含PEM标记行"
            exit 1
          fi
          # 强制权限设置
          chmod 700 $TEMP_SIGN_DIR
          chmod 600 $TEMP_SIGN_DIR/*.pem

      # 3. 调试输出（关键信息脱敏）
      - name: Debug Key Files
        if: always()
        run: |
          echo "===== 文件验证 ====="
          ls -la $TEMP_SIGN_DIR/
          echo "\n----- 私钥头尾 -----"
          head -n 1 $TEMP_SIGN_DIR/private.pem
          tail -n 1 $TEMP_SIGN_DIR/private.pem
          echo "\n----- 证书头尾 -----"
          head -n 1 $TEMP_SIGN_DIR/certificate.pem
          tail -n 1 $TEMP_SIGN_DIR/certificate.pem

      # 4. 密钥对数学验证
      - name: Validate Key Pair
        run: |
          openssl rsa -in $TEMP_SIGN_DIR/private.pem -noout -check 2>openssl.log || (cat openssl.log; exit 1)
          openssl x509 -in $TEMP_SIGN_DIR/certificate.pem -noout -text >/dev/null || exit 1
          # 模数比对
          if [ "$(openssl rsa -in $TEMP_SIGN_DIR/private.pem -noout -modulus | openssl sha256)" != \
               "$(openssl x509 -in $TEMP_SIGN_DIR/certificate.pem -noout -modulus | openssl sha256)" ]; then
            echo "::error::密钥与证书不匹配！需重新生成密钥对"
            exit 1
          fi

      # 5. 构建与上传
      - name: Build RPK
        run: |
          ./node_modules/.bin/aiot build --sign
          mv dist/*.rpk ./OK_School_Life-${{ github.ref_name }}.rpk

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: signed-rpk
          path: ./OK_School_Life-*.rpk
          retention-days: 3