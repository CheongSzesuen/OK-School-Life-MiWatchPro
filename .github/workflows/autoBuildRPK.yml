name: Signed RPK Release
on:
  push:
    tags:
      - 'v*'

jobs:
  build-rpk:
    runs-on: ubuntu-latest
    environment: production  # 关联环境（如需环境隔离）
    
    steps:
      # 步骤1：检出代码
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 步骤2：还原签名文件
      - name: Restore Signing Files
        run: |
          mkdir -p .temp_OkSchoolLife/sign/
          echo "${{ secrets.PRIVATE_PEM }}" > .temp_OkSchoolLife/sign/private.pem
          echo "${{ secrets.CERTIFICATE_PEM }}" > .temp_OkSchoolLife/sign/certificate.pem
          chmod 600 .temp_OkSchoolLife/sign/*.pem  # 关键权限设置[1,5](@ref)

      # 步骤3：验证签名文件
      - name: Verify Signing Files
        run: |
          ls -la .temp_OkSchoolLife/sign/
          openssl rsa -in .temp_OkSchoolLife/sign/private.pem -noout -check
          openssl x509 -in .temp_OkSchoolLife/sign/certificate.pem -noout -text

      # 步骤4：设置Node.js环境
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'

      # 步骤5：安装依赖
      - name: Install dependencies
        run: |
          npm install
          if [ ! -f "node_modules/.bin/aiot" ]; then
            echo "::error::aiot-toolkit not found"
            exit 1
          fi

      # 步骤6：构建并签名RPK
      - name: Build & Sign RPK
        run: |
          ./node_modules/.bin/aiot build --sign
          mv dist/*.rpk ./OK_School_Life-MiBand9Pro-${{ github.ref_name }}.rpk
        env:
          TEMP_PROJECT_PATH: ${{ github.workspace }}/.temp_OkSchoolLife  # 指定签名路径[1](@ref)

      # 步骤7：验证RPK签名
      - name: Verify RPK Signature
        run: |
          unzip -l OK_School_Life-*.rpk | grep META-INF/
          unzip -p OK_School_Life-*.rpk META-INF/CERT.RSA | openssl pkcs7 -inform DER -print_certs

      # 步骤8：生成更新日志
      - name: Generate changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 ${{ github.ref_name }}^ 2>/dev/null || echo "")
          if [ -z "$PREV_TAG" ]; then
            LOGS=$(git log --pretty=format:"- %s ↳ 提交人: %an (%h)")
          else
            LOGS=$(git log --pretty=format:"- %s ↳ 提交人: %an (%h)" $PREV_TAG..${{ github.ref_name }})
          fi
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo "📝 签名版更新日志" >> $GITHUB_ENV
          echo "签名证书指纹: $(openssl x509 -in .temp_OkSchoolLife/sign/certificate.pem -noout -fingerprint)" >> $GITHUB_ENV
          echo "$LOGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # 步骤9：创建Release
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "签名版 Release ${{ github.ref_name }}"
          body: |
            ${{ env.CHANGELOG }}

            🔐 签名验证信息
            - 签名方式: RSA-PKCS#1 v1.5
            - 证书有效期: $(openssl x509 -in .temp_OkSchoolLife/sign/certificate.pem -noout -dates)
            - 构建时间: $(date '+%Y-%m-%d %H:%M:%S' -d @"${{ github.run_started_at }}") (UTC+8)
          files: OK_School_Life-MiBand9Pro-${{ github.ref_name }}.rpk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 步骤10：清理签名文件
      - name: Cleanup
        if: always()
        run: rm -rf .temp_OkSchoolLife/sign/